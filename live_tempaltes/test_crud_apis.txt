class Test$MODEL$ListAPIView(JWTTestMixin, TestCase):

    def test_get(self):
        $MODEL$Factory.create_batch(10)
        url = reverse('$URL_NAMESPACE$:list-$MODEL_LOWER$')
        user = SimpleUserFactory.create()

        response = self.get_with_token(url, user)

        self.response_200(response)
        $MODEL_LOWER$_list_data = response.data

        write_assertions($MODEL_LOWER$_list_data, '$MODEL_LOWER$_list_data', type_only=True)


class Test$MODEL$DetailAPIView(JWTTestMixin, TestCase):

    def test_get(self):
        $MODEL_LOWER$ = $MODEL$Factory.create()

        url = reverse('$URL_NAMESPACE$:detail-$MODEL_LOWER$', kwargs={'pk': $MODEL_LOWER$.pk})
        user = SimpleUserFactory.create()

        response = self.get_with_token(url, user)

        self.response_200(response)
        $MODEL_LOWER$_data = response.data

        write_assertions($MODEL_LOWER$_data, '$MODEL_LOWER$_data', type_only=True)

    def test_get_invalid_pk(self):
        url = reverse('$URL_NAMESPACE$:detail-$MODEL_LOWER$', kwargs={'pk': 1000000})
        user = SimpleUserFactory.create()

        response = self.get_with_token(url, user)

        self.response_404(response)
        $MODEL_LOWER$_invalid_data = response.data

        write_assertions($MODEL_LOWER$_invalid_data, '$MODEL_LOWER$_invalid_data', type_only=False)

    def test_put(self):
        $MODEL_LOWER$ = $MODEL$Factory.create()

        url = reverse('$URL_NAMESPACE$:update-$MODEL_LOWER$', kwargs={'pk': $MODEL_LOWER$.pk})
        user = SimpleUserFactory.create()
        $MODEL_LOWER$_data = model_to_dict($MODEL_LOWER$)
        $MODEL_LOWER$_data[''] = 'VERY_NEW_VALUE' #FIXME Change something
        response = self.put_with_token(url, user, data=$MODEL_LOWER$_data)

        self.response_200(response)
        $MODEL_LOWER$_put_data = response.data

        write_assertions($MODEL_LOWER$_put_data, '$MODEL_LOWER$_put_data', type_only=True)

        self.assertEqual($MODEL_LOWER$_put_data[''], 'VERY_NEW_VALUE') #FIXME Compare the data that changed

    def test_delete(self):
        $MODEL_LOWER$ = $MODEL$Factory.create()

        url = reverse('$URL_NAMESPACE$:delete-$MODEL_LOWER$', kwargs={'pk': $MODEL_LOWER$.pk})
        user = SimpleUserFactory.create()

        response = self.delete_with_token(url, user)

        self.response_204(response)

        self.assertEqual($MODEL$.objects.count(), 0)

class Test$MODEL$CreateAPIView(JWTTestMixin, TestCase):

    def test_post(self):
        $MODEL_LOWER$ = $MODEL$Factory.create()

        $MODEL_LOWER$_dict = model_to_dict($MODEL_LOWER$)
        $MODEL_LOWER$.delete()
        $MODEL_LOWER$_dict.pop('id')

        url = reverse('$URL_NAMESPACE$:create-$MODEL_LOWER$')

        user = SimpleUserFactory.create()

        response = self.post_with_token(url, user, data=$MODEL_LOWER$_dict)

        self.response_201(response)
        $MODEL_LOWER$_post_data = response.data
        
        self.assertEqual($MODEL$.objects.count(), 1)
        write_assertions($MODEL_LOWER$_post_data, '$MODEL_LOWER$_post_data', type_only=True)
